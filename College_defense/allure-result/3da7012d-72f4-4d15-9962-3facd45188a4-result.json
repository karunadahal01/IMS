{"name": "test_overall_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=138.0.7204.169)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6ad16e935+77845]\n\tGetHandleVerifier [0x0x7ff6ad16e990+77936]\n\t(No symbol) [0x0x7ff6acf29cda]\n\t(No symbol) [0x0x7ff6acf021a1]\n\t(No symbol) [0x0x7ff6acfafc6e]\n\t(No symbol) [0x0x7ff6acfd0432]\n\t(No symbol) [0x0x7ff6acfa86a3]\n\t(No symbol) [0x0x7ff6acf71791]\n\t(No symbol) [0x0x7ff6acf72523]\n\tGetHandleVerifier [0x0x7ff6ad44684d+3059501]\n\tGetHandleVerifier [0x0x7ff6ad440c0d+3035885]\n\tGetHandleVerifier [0x0x7ff6ad460400+3164896]\n\tGetHandleVerifier [0x0x7ff6ad188c3e+185118]\n\tGetHandleVerifier [0x0x7ff6ad19054f+216111]\n\tGetHandleVerifier [0x0x7ff6ad1772e4+113092]\n\tGetHandleVerifier [0x0x7ff6ad177499+113529]\n\tGetHandleVerifier [0x0x7ff6ad15e298+10616]\n\tBaseThreadInitThunk [0x0x7ff840aa7374+20]\n\tRtlUserThreadStart [0x0x7ff8419dcc91+33]", "trace": "self = <test_flow.TestERPFlowCreation object at 0x000001C40E709450>\n\n    def test_overall_flow(self):\n        allure.step(\"Testing overall flow of the application\")\n>       self.login(\"gedehim917@decodewp.com\",\n                   \"Tebahal1!\",\n                   \"https://velvet.webredirect.himshang.com.np/#/pages/dashboard\")\n\ntest_flow.py:1965: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_flow.py:128: in login\n    driver.get(link)\n..\\..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:472: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C40E6A7380>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff6ad15e298+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff840aa7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ff8419dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=138.0.7204.169)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6ad16e935+77845]\nE       \tGetHandleVerifier [0x0x7ff6ad16e990+77936]\nE       \t(No symbol) [0x0x7ff6acf29cda]\nE       \t(No symbol) [0x0x7ff6acf021a1]\nE       \t(No symbol) [0x0x7ff6acfafc6e]\nE       \t(No symbol) [0x0x7ff6acfd0432]\nE       \t(No symbol) [0x0x7ff6acfa86a3]\nE       \t(No symbol) [0x0x7ff6acf71791]\nE       \t(No symbol) [0x0x7ff6acf72523]\nE       \tGetHandleVerifier [0x0x7ff6ad44684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff6ad440c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff6ad460400+3164896]\nE       \tGetHandleVerifier [0x0x7ff6ad188c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff6ad19054f+216111]\nE       \tGetHandleVerifier [0x0x7ff6ad1772e4+113092]\nE       \tGetHandleVerifier [0x0x7ff6ad177499+113529]\nE       \tGetHandleVerifier [0x0x7ff6ad15e298+10616]\nE       \tBaseThreadInitThunk [0x0x7ff840aa7374+20]\nE       \tRtlUserThreadStart [0x0x7ff8419dcc91+33]\n\n..\\..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "steps": [{"name": "Login with username: 'gedehim917@decodewp.com'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=138.0.7204.169)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6ad16e935+77845]\n\tGetHandleVerifier [0x0x7ff6ad16e990+77936]\n\t(No symbol) [0x0x7ff6acf29cda]\n\t(No symbol) [0x0x7ff6acf021a1]\n\t(No symbol) [0x0x7ff6acfafc6e]\n\t(No symbol) [0x0x7ff6acfd0432]\n\t(No symbol) [0x0x7ff6acfa86a3]\n\t(No symbol) [0x0x7ff6acf71791]\n\t(No symbol) [0x0x7ff6acf72523]\n\tGetHandleVerifier [0x0x7ff6ad44684d+3059501]\n\tGetHandleVerifier [0x0x7ff6ad440c0d+3035885]\n\tGetHandleVerifier [0x0x7ff6ad460400+3164896]\n\tGetHandleVerifier [0x0x7ff6ad188c3e+185118]\n\tGetHandleVerifier [0x0x7ff6ad19054f+216111]\n\tGetHandleVerifier [0x0x7ff6ad1772e4+113092]\n\tGetHandleVerifier [0x0x7ff6ad177499+113529]\n\tGetHandleVerifier [0x0x7ff6ad15e298+10616]\n\tBaseThreadInitThunk [0x0x7ff840aa7374+20]\n\tRtlUserThreadStart [0x0x7ff8419dcc91+33]\n\n", "trace": "  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\karun\\PycharmProjects\\PythonProject\\project\\College_defense\\test_flow.py\", line 128, in login\n    driver.get(link)\n    ~~~~~~~~~~^^^^^^\n  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 472, in get\n    self.execute(Command.GET, {\"url\": url})\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "username", "value": "'gedehim917@decodewp.com'"}, {"name": "password", "value": "'Tebahal1!'"}, {"name": "link", "value": "'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'"}], "start": 1753696345617, "stop": 1753696346261}], "start": 1753696345617, "stop": 1753696346295, "uuid": "b961fa2e-31a2-462a-bfe7-c1ea2bbad0f6", "historyId": "19c629496675b750fef6dc56c298a72b", "testCaseId": "19c629496675b750fef6dc56c298a72b", "fullName": "test_flow.TestERPFlowCreation#test_overall_flow", "labels": [{"name": "feature", "value": "Test ERP FLow Creation"}, {"name": "suite", "value": "test_flow"}, {"name": "subSuite", "value": "TestERPFlowCreation"}, {"name": "host", "value": "DESKTOP-AOJNATO"}, {"name": "thread", "value": "13916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow"}]}