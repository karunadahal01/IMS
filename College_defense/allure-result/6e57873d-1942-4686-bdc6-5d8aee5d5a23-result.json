{"name": "test_product", "status": "broken", "statusDetails": {"message": "test_flow.LoginFailedError: Login failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f230e935+77845]\n\tGetHandleVerifier [0x0x7ff7f230e990+77936]\n\t(No symbol) [0x0x7ff7f20c9cda]\n\t(No symbol) [0x0x7ff7f21206aa]\n\t(No symbol) [0x0x7ff7f212095c]\n\t(No symbol) [0x0x7ff7f2173d07]\n\t(No symbol) [0x0x7ff7f214890f]\n\t(No symbol) [0x0x7ff7f2170b07]\n\t(No symbol) [0x0x7ff7f21486a3]\n\t(No symbol) [0x0x7ff7f2111791]\n\t(No symbol) [0x0x7ff7f2112523]\n\tGetHandleVerifier [0x0x7ff7f25e684d+3059501]\n\tGetHandleVerifier [0x0x7ff7f25e0c0d+3035885]\n\tGetHandleVerifier [0x0x7ff7f2600400+3164896]\n\tGetHandleVerifier [0x0x7ff7f2328c3e+185118]\n\tGetHandleVerifier [0x0x7ff7f233054f+216111]\n\tGetHandleVerifier [0x0x7ff7f23172e4+113092]\n\tGetHandleVerifier [0x0x7ff7f2317499+113529]\n\tGetHandleVerifier [0x0x7ff7f22fe298+10616]\n\tBaseThreadInitThunk [0x0x7ff840aa7374+20]\n\tRtlUserThreadStart [0x0x7ff8419dcc91+33]", "trace": "self = <test_flow.TestERPFlowCreation object at 0x0000014CFC7A9310>, username = 'gedehim917@decodewp.com'\npassword = 'Tebahal1!', link = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Login with username: {username}\")\n    def login(self, username, password, link):\n        driver = self.driver\n        driver.maximize_window()\n        driver.get(link)\n        logger.info(f\"Navigated to: {link}\")\n    \n        username_field = WebDriverWait(driver, 15).until(\n            ec.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n        )\n        username_field.clear()\n        username_field.send_keys(username)\n        logger.info(\"Entered username\")\n    \n        password_field = WebDriverWait(driver, 10).until(\n            ec.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n        )\n        password_field.clear()\n        password_field.send_keys(password)\n        logger.info(\"Entered password\")\n        # Click the Sign-In button\n        try:\n            sign_in_btn = WebDriverWait(driver, 10).until(\n                ec.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n            )\n            self.safe_click(sign_in_btn, \"Sign In button\")\n        except Exception  as e:\n            logger.error(f\"Sign In button not found or not clickable: {e}\")\n            allure.attach(driver.get_screenshot_as_png(),\n                          name=\"Sign In Button Error\",\n                          attachment_type=allure.attachment_type.PNG)\n            raise LoginFailedError(\"Sign In button not found or not clickable\")\n        # Wait for the page to load after login\n        try:\n>           logout_btn = WebDriverWait(self.driver, 20).until(\n                ec.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n            )\n\ntest_flow.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"74d358d7b8e23b283cf4ba6cb1a3e4a2\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000014CFC7DBE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f230e935+77845]\nE       \tGetHandleVerifier [0x0x7ff7f230e990+77936]\nE       \t(No symbol) [0x0x7ff7f20c9cda]\nE       \t(No symbol) [0x0x7ff7f21206aa]\nE       \t(No symbol) [0x0x7ff7f212095c]\nE       \t(No symbol) [0x0x7ff7f2173d07]\nE       \t(No symbol) [0x0x7ff7f214890f]\nE       \t(No symbol) [0x0x7ff7f2170b07]\nE       \t(No symbol) [0x0x7ff7f21486a3]\nE       \t(No symbol) [0x0x7ff7f2111791]\nE       \t(No symbol) [0x0x7ff7f2112523]\nE       \tGetHandleVerifier [0x0x7ff7f25e684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff7f25e0c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff7f2600400+3164896]\nE       \tGetHandleVerifier [0x0x7ff7f2328c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff7f233054f+216111]\nE       \tGetHandleVerifier [0x0x7ff7f23172e4+113092]\nE       \tGetHandleVerifier [0x0x7ff7f2317499+113529]\nE       \tGetHandleVerifier [0x0x7ff7f22fe298+10616]\nE       \tBaseThreadInitThunk [0x0x7ff840aa7374+20]\nE       \tRtlUserThreadStart [0x0x7ff8419dcc91+33]\n\n..\\..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_flow.TestERPFlowCreation object at 0x0000014CFC7A9310>\n\n    def test_product(self):\n        allure.step(\"Testing overall flow of the application\")\n>       self.login(\"gedehim917@decodewp.com\",\n                   \"Tebahal1!\",\n                   \"https://velvet.webredirect.himshang.com.np/#/pages/dashboard\")\n\ntest_flow.py:2203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_flow.TestERPFlowCreation object at 0x0000014CFC7A9310>, username = 'gedehim917@decodewp.com'\npassword = 'Tebahal1!', link = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Login with username: {username}\")\n    def login(self, username, password, link):\n        driver = self.driver\n        driver.maximize_window()\n        driver.get(link)\n        logger.info(f\"Navigated to: {link}\")\n    \n        username_field = WebDriverWait(driver, 15).until(\n            ec.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n        )\n        username_field.clear()\n        username_field.send_keys(username)\n        logger.info(\"Entered username\")\n    \n        password_field = WebDriverWait(driver, 10).until(\n            ec.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n        )\n        password_field.clear()\n        password_field.send_keys(password)\n        logger.info(\"Entered password\")\n        # Click the Sign-In button\n        try:\n            sign_in_btn = WebDriverWait(driver, 10).until(\n                ec.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n            )\n            self.safe_click(sign_in_btn, \"Sign In button\")\n        except Exception  as e:\n            logger.error(f\"Sign In button not found or not clickable: {e}\")\n            allure.attach(driver.get_screenshot_as_png(),\n                          name=\"Sign In Button Error\",\n                          attachment_type=allure.attachment_type.PNG)\n            raise LoginFailedError(\"Sign In button not found or not clickable\")\n        # Wait for the page to load after login\n        try:\n            logout_btn = WebDriverWait(self.driver, 20).until(\n                ec.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n            )\n            logger.info(\"Already Logged In popup detected\")\n    \n            # Click Logout button with fallback to JavaScript click\n            try:\n                with allure.step(\"Detected 'Already Logged In' popup â€” logging out first\"):\n                    self.safe_click(logout_btn, \"Logout button\")\n                    logger.info(\"Logout button clicked successfully\")\n            except Exception as e:\n                logger.error(f\"Failed to click logout button: {e}\")\n                allure.attach(self.driver.get_screenshot_as_png(),\n                              name=\"Logout Button Error\",\n                              attachment_type=allure.attachment_type.PNG)\n                raise LoginFailedError(f\"Could not click logout button: {e}\")\n    \n            logger.info(\"Logout button clicked successfully\")\n            time.sleep(8)  # Wait for logout to complete\n    \n            # Wait for the \"Sign In\" button to be clickable and press Enter\n            sign_in_btn = WebDriverWait(self.driver, 10).until(\n                ec.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n            )\n    \n            # Press Enter on the \"Sign In\" button\n            sign_in_btn.send_keys(Keys.ENTER)\n            logger.info(\"Pressed Enter on Sign In button after logout\")\n    \n        except Exception as e:\n            logger.error(f\"Failed to handle 'Already Logged In' popup: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(),\n                          name=\"Login Error\",\n                          attachment_type=allure.attachment_type.PNG)\n>           raise LoginFailedError(f\"Login failed: {e}\")\nE           test_flow.LoginFailedError: Login failed: Message: \nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x7ff7f230e935+77845]\nE           \tGetHandleVerifier [0x0x7ff7f230e990+77936]\nE           \t(No symbol) [0x0x7ff7f20c9cda]\nE           \t(No symbol) [0x0x7ff7f21206aa]\nE           \t(No symbol) [0x0x7ff7f212095c]\nE           \t(No symbol) [0x0x7ff7f2173d07]\nE           \t(No symbol) [0x0x7ff7f214890f]\nE           \t(No symbol) [0x0x7ff7f2170b07]\nE           \t(No symbol) [0x0x7ff7f21486a3]\nE           \t(No symbol) [0x0x7ff7f2111791]\nE           \t(No symbol) [0x0x7ff7f2112523]\nE           \tGetHandleVerifier [0x0x7ff7f25e684d+3059501]\nE           \tGetHandleVerifier [0x0x7ff7f25e0c0d+3035885]\nE           \tGetHandleVerifier [0x0x7ff7f2600400+3164896]\nE           \tGetHandleVerifier [0x0x7ff7f2328c3e+185118]\nE           \tGetHandleVerifier [0x0x7ff7f233054f+216111]\nE           \tGetHandleVerifier [0x0x7ff7f23172e4+113092]\nE           \tGetHandleVerifier [0x0x7ff7f2317499+113529]\nE           \tGetHandleVerifier [0x0x7ff7f22fe298+10616]\nE           \tBaseThreadInitThunk [0x0x7ff840aa7374+20]\nE           \tRtlUserThreadStart [0x0x7ff8419dcc91+33]\n\ntest_flow.py:192: LoginFailedError"}, "steps": [{"name": "Login with username: 'gedehim917@decodewp.com'", "status": "broken", "statusDetails": {"message": "test_flow.LoginFailedError: Login failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f230e935+77845]\n\tGetHandleVerifier [0x0x7ff7f230e990+77936]\n\t(No symbol) [0x0x7ff7f20c9cda]\n\t(No symbol) [0x0x7ff7f21206aa]\n\t(No symbol) [0x0x7ff7f212095c]\n\t(No symbol) [0x0x7ff7f2173d07]\n\t(No symbol) [0x0x7ff7f214890f]\n\t(No symbol) [0x0x7ff7f2170b07]\n\t(No symbol) [0x0x7ff7f21486a3]\n\t(No symbol) [0x0x7ff7f2111791]\n\t(No symbol) [0x0x7ff7f2112523]\n\tGetHandleVerifier [0x0x7ff7f25e684d+3059501]\n\tGetHandleVerifier [0x0x7ff7f25e0c0d+3035885]\n\tGetHandleVerifier [0x0x7ff7f2600400+3164896]\n\tGetHandleVerifier [0x0x7ff7f2328c3e+185118]\n\tGetHandleVerifier [0x0x7ff7f233054f+216111]\n\tGetHandleVerifier [0x0x7ff7f23172e4+113092]\n\tGetHandleVerifier [0x0x7ff7f2317499+113529]\n\tGetHandleVerifier [0x0x7ff7f22fe298+10616]\n\tBaseThreadInitThunk [0x0x7ff840aa7374+20]\n\tRtlUserThreadStart [0x0x7ff8419dcc91+33]\n\n", "trace": "  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\karun\\PycharmProjects\\PythonProject\\project\\College_defense\\test_flow.py\", line 192, in login\n    raise LoginFailedError(f\"Login failed: {e}\")\n"}, "attachments": [{"name": "Login Error", "source": "c2b6966b-9af3-4600-bd59-03d3dc36ef3a-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'gedehim917@decodewp.com'"}, {"name": "password", "value": "'Tebahal1!'"}, {"name": "link", "value": "'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'"}], "start": 1753703266490, "stop": 1753703301920}], "attachments": [{"name": "log", "source": "d569e8cf-0866-46ce-9b52-b9ebc1af47e3-attachment.txt", "type": "text/plain"}], "start": 1753703266490, "stop": 1753703301923, "uuid": "183906b2-662c-4511-a9ef-3de8944b709c", "historyId": "a068f84781427714db367b8b9a831eb7", "testCaseId": "a068f84781427714db367b8b9a831eb7", "fullName": "test_flow.TestERPFlowCreation#test_product", "labels": [{"name": "feature", "value": "Test ERP FLow Creation"}, {"name": "suite", "value": "test_flow"}, {"name": "subSuite", "value": "TestERPFlowCreation"}, {"name": "host", "value": "DESKTOP-AOJNATO"}, {"name": "thread", "value": "15592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow"}]}