{"name": "test_login", "status": "broken", "statusDetails": {"message": "test_purchase_invoice.LoginFailedError: Login failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7a4f46f75+76917]\n\tGetHandleVerifier [0x0x7ff7a4f46fd0+77008]\n\t(No symbol) [0x0x7ff7a4cf9dea]\n\t(No symbol) [0x0x7ff7a4d50256]\n\t(No symbol) [0x0x7ff7a4d5050c]\n\t(No symbol) [0x0x7ff7a4da3887]\n\t(No symbol) [0x0x7ff7a4d784af]\n\t(No symbol) [0x0x7ff7a4da065c]\n\t(No symbol) [0x0x7ff7a4d78243]\n\t(No symbol) [0x0x7ff7a4d41431]\n\t(No symbol) [0x0x7ff7a4d421c3]\n\tGetHandleVerifier [0x0x7ff7a521d2ad+3051437]\n\tGetHandleVerifier [0x0x7ff7a5217903+3028483]\n\tGetHandleVerifier [0x0x7ff7a523589d+3151261]\n\tGetHandleVerifier [0x0x7ff7a4f6183e+185662]\n\tGetHandleVerifier [0x0x7ff7a4f696ff+218111]\n\tGetHandleVerifier [0x0x7ff7a4f4faf4+112628]\n\tGetHandleVerifier [0x0x7ff7a4f4fca9+113065]\n\tGetHandleVerifier [0x0x7ff7a4f36c78+10616]\n\tBaseThreadInitThunk [0x0x7ffc80797374+20]\n\tRtlUserThreadStart [0x0x7ffc809bcc91+33]", "trace": "self = <test_purchase_invoice.TestPurchaseInvoiceCreation object at 0x000001C6CE36ED50>\nusername = 'gedehim917@decodewp.com', password = 'Tebahal1!'\nlink = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Login with username: {username}\")\n    def login(self, username, password, link):\n        driver = self.driver\n        driver.maximize_window()\n        driver.get(link)\n        logger.info(f\"Navigated to: {link}\")\n    \n        username_field = WebDriverWait(driver, 15).until(\n            EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n        )\n        username_field.clear()\n        username_field.send_keys(username)\n        logger.info(\"Entered username\")\n    \n        password_field = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n        )\n        password_field.clear()\n        password_field.send_keys(password)\n        logger.info(\"Entered password\")\n    \n        sign_in_btn = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n        )\n        self.safe_click(sign_in_btn, \"Sign In button\")\n    \n        # # Handle already logged in popup\n        # try:\n        #     logout_btn = WebDriverWait(driver, 5).until(\n        #         EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n        #     )\n        #     self.safe_click(logout_btn, \"Logout button on 'Already logged in' popup\")\n        #     time.sleep(5)\n        #     sign_in_btn = WebDriverWait(driver, 10).until(\n        #         EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n        #     )\n        #     sign_in_btn.send_keys(Keys.ENTER)\n        #     logger.info(\"Handled already logged in scenario, re-logged in\")\n        # except TimeoutException:\n        #     logger.info(\"No 'already logged in' popup detected\")\n    \n        # Handle already logged in scenario\n        try:\n>           logout_btn = WebDriverWait(self.driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n            )\n\ntest_purchase_invoice.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"61eec885eac3e5556588fb6f479acc27\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001C6CE8FEF20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7a4f46f75+76917]\nE       \tGetHandleVerifier [0x0x7ff7a4f46fd0+77008]\nE       \t(No symbol) [0x0x7ff7a4cf9dea]\nE       \t(No symbol) [0x0x7ff7a4d50256]\nE       \t(No symbol) [0x0x7ff7a4d5050c]\nE       \t(No symbol) [0x0x7ff7a4da3887]\nE       \t(No symbol) [0x0x7ff7a4d784af]\nE       \t(No symbol) [0x0x7ff7a4da065c]\nE       \t(No symbol) [0x0x7ff7a4d78243]\nE       \t(No symbol) [0x0x7ff7a4d41431]\nE       \t(No symbol) [0x0x7ff7a4d421c3]\nE       \tGetHandleVerifier [0x0x7ff7a521d2ad+3051437]\nE       \tGetHandleVerifier [0x0x7ff7a5217903+3028483]\nE       \tGetHandleVerifier [0x0x7ff7a523589d+3151261]\nE       \tGetHandleVerifier [0x0x7ff7a4f6183e+185662]\nE       \tGetHandleVerifier [0x0x7ff7a4f696ff+218111]\nE       \tGetHandleVerifier [0x0x7ff7a4f4faf4+112628]\nE       \tGetHandleVerifier [0x0x7ff7a4f4fca9+113065]\nE       \tGetHandleVerifier [0x0x7ff7a4f36c78+10616]\nE       \tBaseThreadInitThunk [0x0x7ffc80797374+20]\nE       \tRtlUserThreadStart [0x0x7ffc809bcc91+33]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_purchase_invoice.TestPurchaseInvoiceCreation object at 0x000001C6CE36ED50>\n\n    def test_login(self):\n        allure.step(\"Login to the application\")\n>       self.login(TEST_CONFIG[\"username\"], TEST_CONFIG[\"password\"], TEST_CONFIG[\"url\"])\n\ntest_purchase_invoice.py:729: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_purchase_invoice.TestPurchaseInvoiceCreation object at 0x000001C6CE36ED50>\nusername = 'gedehim917@decodewp.com', password = 'Tebahal1!'\nlink = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Login with username: {username}\")\n    def login(self, username, password, link):\n        driver = self.driver\n        driver.maximize_window()\n        driver.get(link)\n        logger.info(f\"Navigated to: {link}\")\n    \n        username_field = WebDriverWait(driver, 15).until(\n            EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n        )\n        username_field.clear()\n        username_field.send_keys(username)\n        logger.info(\"Entered username\")\n    \n        password_field = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n        )\n        password_field.clear()\n        password_field.send_keys(password)\n        logger.info(\"Entered password\")\n    \n        sign_in_btn = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n        )\n        self.safe_click(sign_in_btn, \"Sign In button\")\n    \n        # # Handle already logged in popup\n        # try:\n        #     logout_btn = WebDriverWait(driver, 5).until(\n        #         EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n        #     )\n        #     self.safe_click(logout_btn, \"Logout button on 'Already logged in' popup\")\n        #     time.sleep(5)\n        #     sign_in_btn = WebDriverWait(driver, 10).until(\n        #         EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n        #     )\n        #     sign_in_btn.send_keys(Keys.ENTER)\n        #     logger.info(\"Handled already logged in scenario, re-logged in\")\n        # except TimeoutException:\n        #     logger.info(\"No 'already logged in' popup detected\")\n    \n        # Handle already logged in scenario\n        try:\n            logout_btn = WebDriverWait(self.driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n            )\n            logger.info(\"Already Logged In popup detected\")\n    \n            # Click Logout button with fallback to JavaScript click\n            try:\n                with allure.step(\"Detected 'Already Logged In' popup â€” logging out first\"):\n                    self.safe_click(logout_btn, \"Logout button\")\n                    logger.info(\"Logout button clicked successfully\")\n            except Exception as e:\n                logger.error(f\"Failed to click logout button: {e}\")\n                allure.attach(self.driver.get_screenshot_as_png(),\n                              name=\"Logout Button Error\",\n                              attachment_type=allure.attachment_type.PNG)\n                raise LoginFailedError(f\"Could not click logout button: {e}\")\n    \n            logger.info(\"Logout button clicked successfully\")\n            time.sleep(8)  # Wait for logout to complete\n    \n            # Wait for the \"Sign In\" button to be clickable and press Enter\n            sign_in_btn = WebDriverWait(self.driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n            )\n    \n            # Press Enter on the \"Sign In\" button\n            sign_in_btn.send_keys(Keys.ENTER)\n            logger.info(\"Pressed Enter on Sign In button after logout\")\n    \n        except Exception as e:\n            logger.error(f\"Failed to handle 'Already Logged In' popup: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(),\n                          name=\"Login Error\",\n                          attachment_type=allure.attachment_type.PNG)\n>           raise LoginFailedError(f\"Login failed: {e}\")\nE           test_purchase_invoice.LoginFailedError: Login failed: Message: \nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x7ff7a4f46f75+76917]\nE           \tGetHandleVerifier [0x0x7ff7a4f46fd0+77008]\nE           \t(No symbol) [0x0x7ff7a4cf9dea]\nE           \t(No symbol) [0x0x7ff7a4d50256]\nE           \t(No symbol) [0x0x7ff7a4d5050c]\nE           \t(No symbol) [0x0x7ff7a4da3887]\nE           \t(No symbol) [0x0x7ff7a4d784af]\nE           \t(No symbol) [0x0x7ff7a4da065c]\nE           \t(No symbol) [0x0x7ff7a4d78243]\nE           \t(No symbol) [0x0x7ff7a4d41431]\nE           \t(No symbol) [0x0x7ff7a4d421c3]\nE           \tGetHandleVerifier [0x0x7ff7a521d2ad+3051437]\nE           \tGetHandleVerifier [0x0x7ff7a5217903+3028483]\nE           \tGetHandleVerifier [0x0x7ff7a523589d+3151261]\nE           \tGetHandleVerifier [0x0x7ff7a4f6183e+185662]\nE           \tGetHandleVerifier [0x0x7ff7a4f696ff+218111]\nE           \tGetHandleVerifier [0x0x7ff7a4f4faf4+112628]\nE           \tGetHandleVerifier [0x0x7ff7a4f4fca9+113065]\nE           \tGetHandleVerifier [0x0x7ff7a4f36c78+10616]\nE           \tBaseThreadInitThunk [0x0x7ffc80797374+20]\nE           \tRtlUserThreadStart [0x0x7ffc809bcc91+33]\n\ntest_purchase_invoice.py:200: LoginFailedError"}, "steps": [{"name": "Login with username: 'gedehim917@decodewp.com'", "status": "broken", "statusDetails": {"message": "test_purchase_invoice.LoginFailedError: Login failed: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7a4f46f75+76917]\n\tGetHandleVerifier [0x0x7ff7a4f46fd0+77008]\n\t(No symbol) [0x0x7ff7a4cf9dea]\n\t(No symbol) [0x0x7ff7a4d50256]\n\t(No symbol) [0x0x7ff7a4d5050c]\n\t(No symbol) [0x0x7ff7a4da3887]\n\t(No symbol) [0x0x7ff7a4d784af]\n\t(No symbol) [0x0x7ff7a4da065c]\n\t(No symbol) [0x0x7ff7a4d78243]\n\t(No symbol) [0x0x7ff7a4d41431]\n\t(No symbol) [0x0x7ff7a4d421c3]\n\tGetHandleVerifier [0x0x7ff7a521d2ad+3051437]\n\tGetHandleVerifier [0x0x7ff7a5217903+3028483]\n\tGetHandleVerifier [0x0x7ff7a523589d+3151261]\n\tGetHandleVerifier [0x0x7ff7a4f6183e+185662]\n\tGetHandleVerifier [0x0x7ff7a4f696ff+218111]\n\tGetHandleVerifier [0x0x7ff7a4f4faf4+112628]\n\tGetHandleVerifier [0x0x7ff7a4f4fca9+113065]\n\tGetHandleVerifier [0x0x7ff7a4f36c78+10616]\n\tBaseThreadInitThunk [0x0x7ffc80797374+20]\n\tRtlUserThreadStart [0x0x7ffc809bcc91+33]\n\n", "trace": "  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\karun\\PycharmProjects\\PythonProject\\Flow_Addproduct_purchase_sales\\test_purchase_invoice.py\", line 200, in login\n    raise LoginFailedError(f\"Login failed: {e}\")\n"}, "attachments": [{"name": "Login Error", "source": "9cfd3ca3-9f2d-4444-8fd5-88bac5e90dda-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'gedehim917@decodewp.com'"}, {"name": "password", "value": "'Tebahal1!'"}, {"name": "link", "value": "'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'"}], "start": 1752118984721, "stop": 1752119008573}], "attachments": [{"name": "log", "source": "87ce5aad-9dc6-4708-9724-b01ff362c97a-attachment.txt", "type": "text/plain"}], "start": 1752118984721, "stop": 1752119008578, "uuid": "a5ebd5c2-89b9-44e9-985d-25f83d7c46f7", "historyId": "7063b0240b8cd58bbe9eda5ea0a097b4", "testCaseId": "7063b0240b8cd58bbe9eda5ea0a097b4", "fullName": "test_purchase_invoice.TestPurchaseInvoiceCreation#test_login", "labels": [{"name": "feature", "value": "Purchase Invoice Creation"}, {"name": "suite", "value": "test_purchase_invoice"}, {"name": "subSuite", "value": "TestPurchaseInvoiceCreation"}, {"name": "host", "value": "DESKTOP-AOJNATO"}, {"name": "thread", "value": "5888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_purchase_invoice"}]}