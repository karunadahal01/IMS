{"name": "test_product_master_creation", "status": "failed", "statusDetails": {"message": "Failed: Product master creation test failed: Login process encountered an unexpected error: Login verification failed: no expected dashboard elements found", "trace": "self = <test_flow_product.TestProductFlow object at 0x0000029EFA337B10>, username = 'gedehim917@decodewp.com'\npassword = 'Tebahal1!', link = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Perform login with username: {username}\")\n    def login(self, username, password, link):\n        \"\"\"\n        Perform login with improved error handling and retry mechanism.\n        \"\"\"\n        try:\n            self.driver.maximize_window()\n            self.driver.get(link)\n            logger.info(f\"Navigated to login page: {link}\")\n    \n            with allure.step(\"Entering credentials and clicking Sign In\"):\n                # Wait for username field and enter credentials\n                username_field = WebDriverWait(self.driver, 15).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n                )\n                username_field.clear()\n                username_field.send_keys(username)\n                logger.info(\"Username entered successfully\")\n    \n                # Enter password\n                password_field = WebDriverWait(self.driver, 10).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n                )\n                password_field.clear()\n                password_field.send_keys(password)\n                logger.info(\"Password entered successfully\")\n    \n                # Click Sign In button\n                sign_in_btn = WebDriverWait(self.driver, 10).until(\n                    EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n                )\n                sign_in_btn.click()\n                logger.info(\"Sign In button clicked\")\n    \n            # Handle already logged in scenario\n            try:\n                logout_btn = WebDriverWait(self.driver, 8).until(\n                    EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n                )\n                with allure.step(\"Detected 'Already Logged In' popup — logging out first\"):\n                    logout_btn.click()\n                    time.sleep(3)\n                    logger.info(\"Logged out from existing session\")\n    \n                    # Re-click Sign In\n                    sign_in_btn = WebDriverWait(self.driver, 10).until(\n                        EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n                    )\n                    sign_in_btn.click()\n                    logger.info(\"Re-clicked Sign In after logout\")\n    \n            except TimeoutException:\n                logger.info(\"No 'Already Logged In' popup detected — continuing with login\")\n    \n            # Verify login success with multiple possible indicators\n            try:\n                login_success_indicators = [\n                    (By.XPATH, \"//span[contains(text(), 'Dashboard')]\"),\n                    (By.XPATH, \"//span[contains(text(), 'Masters')]\"),\n                    (By.XPATH, \"//a[contains(text(), 'Masters')]\"),\n                    (By.XPATH, \"//*[contains(text(), 'Welcome')]\")\n                ]\n    \n                login_successful = False\n                for locator in login_success_indicators:\n                    try:\n                        WebDriverWait(self.driver, 5).until(EC.presence_of_element_located(locator))\n                        login_successful = True\n                        logger.info(f\"Login verified with locator: {locator}\")\n                        break\n                    except TimeoutException:\n                        continue\n    \n                if not login_successful:\n>                   raise LoginFailedError(\"Login verification failed: no expected dashboard elements found\")\nE                   test_flow_product.LoginFailedError: Login verification failed: no expected dashboard elements found\n\ntest_flow_product.py:576: LoginFailedError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_flow_product.TestProductFlow object at 0x0000029EFA337B10>\n\n    @allure.feature(\"Product Management\")\n    @allure.story(\"Product Master Creation\")\n    def test_product_master_creation(self):\n        \"\"\"Test complete product master creation flow.\"\"\"\n        try:\n            # First login\n>           self.login(\n                TEST_CONFIG[\"username\"],\n                TEST_CONFIG[\"password\"],\n                TEST_CONFIG[\"url\"]\n            )\n\ntest_flow_product.py:825: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_flow_product.TestProductFlow object at 0x0000029EFA337B10>, username = 'gedehim917@decodewp.com'\npassword = 'Tebahal1!', link = 'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'\n\n    @allure.step(\"Perform login with username: {username}\")\n    def login(self, username, password, link):\n        \"\"\"\n        Perform login with improved error handling and retry mechanism.\n        \"\"\"\n        try:\n            self.driver.maximize_window()\n            self.driver.get(link)\n            logger.info(f\"Navigated to login page: {link}\")\n    \n            with allure.step(\"Entering credentials and clicking Sign In\"):\n                # Wait for username field and enter credentials\n                username_field = WebDriverWait(self.driver, 15).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"username\"]'))\n                )\n                username_field.clear()\n                username_field.send_keys(username)\n                logger.info(\"Username entered successfully\")\n    \n                # Enter password\n                password_field = WebDriverWait(self.driver, 10).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[formcontrolname=\"password\"]'))\n                )\n                password_field.clear()\n                password_field.send_keys(password)\n                logger.info(\"Password entered successfully\")\n    \n                # Click Sign In button\n                sign_in_btn = WebDriverWait(self.driver, 10).until(\n                    EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n                )\n                sign_in_btn.click()\n                logger.info(\"Sign In button clicked\")\n    \n            # Handle already logged in scenario\n            try:\n                logout_btn = WebDriverWait(self.driver, 8).until(\n                    EC.element_to_be_clickable((By.XPATH, \"//button[.//span[text()='Logout']]\"))\n                )\n                with allure.step(\"Detected 'Already Logged In' popup — logging out first\"):\n                    logout_btn.click()\n                    time.sleep(3)\n                    logger.info(\"Logged out from existing session\")\n    \n                    # Re-click Sign In\n                    sign_in_btn = WebDriverWait(self.driver, 10).until(\n                        EC.element_to_be_clickable((By.XPATH, \"//button[contains(text(), 'Sign In')]\"))\n                    )\n                    sign_in_btn.click()\n                    logger.info(\"Re-clicked Sign In after logout\")\n    \n            except TimeoutException:\n                logger.info(\"No 'Already Logged In' popup detected — continuing with login\")\n    \n            # Verify login success with multiple possible indicators\n            try:\n                login_success_indicators = [\n                    (By.XPATH, \"//span[contains(text(), 'Dashboard')]\"),\n                    (By.XPATH, \"//span[contains(text(), 'Masters')]\"),\n                    (By.XPATH, \"//a[contains(text(), 'Masters')]\"),\n                    (By.XPATH, \"//*[contains(text(), 'Welcome')]\")\n                ]\n    \n                login_successful = False\n                for locator in login_success_indicators:\n                    try:\n                        WebDriverWait(self.driver, 5).until(EC.presence_of_element_located(locator))\n                        login_successful = True\n                        logger.info(f\"Login verified with locator: {locator}\")\n                        break\n                    except TimeoutException:\n                        continue\n    \n                if not login_successful:\n                    raise LoginFailedError(\"Login verification failed: no expected dashboard elements found\")\n    \n                allure.attach(self.driver.get_screenshot_as_png(), name=\"login_success\",\n                              attachment_type=allure.attachment_type.PNG)\n                logger.info(\"Login successful\")\n    \n            except TimeoutException:\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"login_failed\",\n                              attachment_type=allure.attachment_type.PNG)\n                raise LoginFailedError(\"Login failed: expected dashboard elements not found after timeout\")\n    \n        except (NoSuchElementException, ElementNotInteractableException) as e:\n            logger.error(f\"Element interaction error during login: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"login_element_error\",\n                          attachment_type=allure.attachment_type.PNG)\n            raise LoginFailedError(f\"Login failed due to element interaction error: {e}\")\n    \n        except TimeoutException as e:\n            logger.error(f\"Timeout error during login: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"login_timeout\",\n                          attachment_type=allure.attachment_type.PNG)\n            raise LoginFailedError(f\"Login failed due to timeout: {e}\")\n    \n        except WebDriverException as e:\n            logger.error(f\"WebDriver error during login: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"login_webdriver_error\",\n                          attachment_type=allure.attachment_type.PNG)\n            raise LoginFailedError(f\"Login failed due to WebDriver error: {e}\")\n    \n        except Exception as e:\n            logger.error(f\"Unexpected error during login: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"login_unexpected_error\",\n                          attachment_type=allure.attachment_type.PNG)\n>           raise LoginFailedError(f\"Login process encountered an unexpected error: {e}\")\nE           test_flow_product.LoginFailedError: Login process encountered an unexpected error: Login verification failed: no expected dashboard elements found\n\ntest_flow_product.py:609: LoginFailedError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_flow_product.TestProductFlow object at 0x0000029EFA337B10>\n\n    @allure.feature(\"Product Management\")\n    @allure.story(\"Product Master Creation\")\n    def test_product_master_creation(self):\n        \"\"\"Test complete product master creation flow.\"\"\"\n        try:\n            # First login\n            self.login(\n                TEST_CONFIG[\"username\"],\n                TEST_CONFIG[\"password\"],\n                TEST_CONFIG[\"url\"]\n            )\n    \n            # Then create product master\n            product_data = TEST_CONFIG[\"product_data\"]\n            self.create_product_master(\n                product_data[\"product_item\"],\n                product_data[\"HS_code\"],\n                product_data[\"unit\"],\n                product_data[\"item_type\"],\n                product_data[\"description\"],\n                product_data[\"category\"],\n                product_data[\"short_name\"],\n                product_data[\"purchase_price\"],\n                product_data[\"sales_price\"],\n                product_data[\"alt_unit\"],\n                product_data[\"conversion_factor\"],\n                product_data[\"barcode_map\"],\n                product_data[\"barcode_unit\"]\n            )\n    \n            logger.info(\"Product master creation test passed successfully\")\n    \n        except (LoginFailedError, ProductMasterCreationError) as e:\n>           pytest.fail(f\"Product master creation test failed: {e}\")\nE           Failed: Product master creation test failed: Login process encountered an unexpected error: Login verification failed: no expected dashboard elements found\n\ntest_flow_product.py:852: Failed"}, "description": "Test complete product master creation flow.", "steps": [{"name": "Perform login with username: 'gedehim917@decodewp.com'", "status": "broken", "statusDetails": {"message": "test_flow_product.LoginFailedError: Login process encountered an unexpected error: Login verification failed: no expected dashboard elements found\n", "trace": "  File \"C:\\Users\\karun\\AppData\\Roaming\\Python\\Python313\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\karun\\PycharmProjects\\PythonProject\\extra testing\\Custom Exception\\test_flow_product.py\", line 609, in login\n    raise LoginFailedError(f\"Login process encountered an unexpected error: {e}\")\n"}, "steps": [{"name": "Entering credentials and clicking Sign In", "status": "passed", "start": 1751869129916, "stop": 1751869130426}], "attachments": [{"name": "login_unexpected_error", "source": "e6edb8af-bfd5-481a-bd7a-79e3879151a9-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'gedehim917@decodewp.com'"}, {"name": "password", "value": "'Tebahal1!'"}, {"name": "link", "value": "'https://velvet.webredirect.himshang.com.np/#/pages/dashboard'"}], "start": 1751869120164, "stop": 1751869179394}], "attachments": [{"name": "log", "source": "347b773e-ae20-407d-a38e-be9ffa1d43a4-attachment.txt", "type": "text/plain"}], "start": 1751869120164, "stop": 1751869179396, "uuid": "b1fe7ead-1b03-46f8-b8ca-b6507bd68e57", "historyId": "0865bbb13d0d7d5338c91b9c1558002a", "testCaseId": "0865bbb13d0d7d5338c91b9c1558002a", "fullName": "test_flow_product.TestProductFlow#test_product_master_creation", "labels": [{"name": "feature", "value": "Product Management"}, {"name": "story", "value": "Product Master Creation"}, {"name": "suite", "value": "test_flow_product"}, {"name": "subSuite", "value": "TestProductFlow"}, {"name": "host", "value": "DESKTOP-AOJNATO"}, {"name": "thread", "value": "7652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flow_product"}]}